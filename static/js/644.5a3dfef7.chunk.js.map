{"version":3,"file":"static/js/644.5a3dfef7.chunk.js","mappings":"uQA4EA,EAvEqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACtC,OAAQV,GACN,IAAK,OACH,OAAOC,EAAQS,GACjB,IAAK,QACH,OAAOP,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,SAIAC,EAAY,mCAAG,WAAMC,GAAN,oFACnBA,EAAEC,iBADiB,kBAGSN,EAAa,CAAEP,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAHrC,UAGXU,EAHW,SASbA,EAJFC,KACgBC,EAND,EAMbC,KAAQjB,KACRkB,EAPa,EAObA,MAGJC,QAAQC,IAAIJ,GACPE,EAXY,sBAYTG,MAAM,sKAZG,OAejBxB,GAASyB,EAAAA,EAAAA,IAAmB,CAAEN,SAAAA,EAAUE,MAAAA,KAfvB,yDAiBjBC,QAAQC,IAAR,MAjBiB,6EAAH,sDAsBlB,OACE,0BACE,kBAAMG,OAAO,GAAGC,SAAUb,EAA1B,WACE,kBAAOc,QAAQ,OAAf,UACE,kBAAOC,KAAK,OAAO1B,KAAK,OAAOU,MAAOV,EAAM2B,SAAUnB,OAExD,kBAAOiB,QAAQ,QAAf,UACE,kBACEC,KAAK,QACL1B,KAAK,QACLU,MAAOR,EACPyB,SAAUnB,OAId,kBAAOiB,QAAQ,WAAf,UACE,kBACEC,KAAK,WACL1B,KAAK,WACLU,MAAON,EACPuB,SAAUnB,OAGd,mBAAQkB,KAAK,SAAb","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setAuthCredentials } from 'redux/auth/authSlice';\nimport { useRegisterMutation } from 'services/authApi';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [registerUser] = useRegisterMutation();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const credentials = await registerUser({ name, email, password });\n      const {\n        data: {\n          user: { name: username },\n          token,\n        },\n      } = credentials;\n      console.log(username);\n      if (!token) {\n        throw Error('ошибка фетча, нет записи в слайс');\n      }\n\n      dispatch(setAuthCredentials({ username, token }));\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n  };\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">\n          <input type=\"name\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n        <label htmlFor=\"email\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"password\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","useRegisterMutation","registerUser","handleChange","target","value","handleSubmit","e","preventDefault","credentials","data","username","user","token","console","log","Error","setAuthCredentials","action","onSubmit","htmlFor","type","onChange"],"sourceRoot":""}